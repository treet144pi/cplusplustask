#include <iostream>
#include <algorithm>

using namespace std;
/*
std::copy_backward ‚Äî —ç—Ç–æ –∞–ª–≥–æ—Ä–∏—Ç–º –∏–∑ <algorithm>, –∫–æ—Ç–æ—Ä—ã–π –∫–æ–ø–∏—Ä—É–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ –æ–¥–Ω–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –≤ –¥—Ä—É–≥–æ–π –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ (—Å–ø—Ä–∞–≤–∞ –Ω–∞–ª–µ–≤–æ). –û–Ω –æ—Å–æ–±–µ–Ω–Ω–æ –ø–æ–ª–µ–∑–µ–Ω, –∫–æ–≥–¥–∞ –∏—Å—Ö–æ–¥–Ω—ã–π –∏ —Ü–µ–ª–µ–≤–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω—ã –ø–µ—Ä–µ–∫—Ä—ã–≤–∞—é—Ç—Å—è, –∏ –æ–±—ã—á–Ω—ã–π std::copy –º–æ–∂–µ—Ç –∏—Å–ø–æ—Ä—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ.

üîπ –°–∏–Ω—Ç–∞–∫—Å–∏—Å
cpp
#include <algorithm>

BidirIt std::copy_backward(
    BidirIt first,     // –ù–∞—á–∞–ª–æ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞
    BidirIt last,      // –ö–æ–Ω–µ—Ü –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ (–Ω–µ –≤–∫–ª—é—á–∞–µ—Ç—Å—è)
    BidirIt d_last     // –ö–æ–Ω–µ—Ü —Ü–µ–ª–µ–≤–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ (–∫—É–¥–∞ –∫–æ–ø–∏—Ä—É–µ–º)
);
first, last ‚Äî –∏—Å—Ö–æ–¥–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω [first, last).

d_last ‚Äî –∏—Ç–µ—Ä–∞—Ç–æ—Ä –Ω–∞ –∫–æ–Ω–µ—Ü —Ü–µ–ª–µ–≤–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ (—ç–ª–µ–º–µ–Ω—Ç –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ).

–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ç–µ—Ä–∞—Ç–æ—Ä –Ω–∞ –Ω–∞—á–∞–ª–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (d_last - (last - first)).
std::copy_backward –∫–æ–ø–∏—Ä—É–µ—Ç —Å–ø—Ä–∞–≤–∞ –Ω–∞–ª–µ–≤–æ, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏ –µ—â—ë –Ω–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.

std::copy –∫–æ–ø–∏—Ä—É–µ—Ç —Å–ª–µ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ –∏ –º–æ–∂–µ—Ç –∏—Å–ø–æ—Ä—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏–∏ –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤.

–ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
copy_backward ‚Äî –µ—Å–ª–∏ —Ü–µ–ª–µ–≤–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω –ø–µ—Ä–µ–∫—Ä—ã–≤–∞–µ—Ç—Å—è —Å –∏—Å—Ö–æ–¥–Ω—ã–º –∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø—Ä–∞–≤–µ–µ.

copy ‚Äî –µ—Å–ª–∏ –¥–∏–∞–ø–∞–∑–æ–Ω—ã –Ω–µ –ø–µ—Ä–µ–∫—Ä—ã–≤–∞—é—Ç—Å—è –∏–ª–∏ —Ü–µ–ª–µ–≤–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω –ª–µ–≤–µ–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ.
–ê–ª–≥–æ—Ä–∏—Ç–º std::copy_backward –∫–æ–ø–∏—Ä—É–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ:

–ù–∞—á–∏–Ω–∞–µ—Ç —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ (last-1).

–ö–æ–ø–∏—Ä—É–µ—Ç –µ–≥–æ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç —Ü–µ–ª–µ–≤–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ (d_last-1).

–î–≤–∏–≥–∞–µ—Ç—Å—è –≤–ª–µ–≤–æ ‚Äî –∫–æ–ø–∏—Ä—É–µ—Ç –ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –≤ –ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω–∏–π —Ü–µ–ª–µ–≤–æ–π –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ, –ø–æ–∫–∞ –Ω–µ —Å–∫–æ–ø–∏—Ä—É–µ—Ç –≤—Å–µ.*/
int main()
{
    int arr[12] = {0,1,2,3,4,5,6,7,8,9,10,11};

    int first1,last1,first2;
    cin>>first1>>last1>>first2;

    if (first1>= first2)
        copy(arr+first1,arr+last1,arr+first2); // –∫–æ–ø–∏—Ä—É–µ—Ç —Å–ª–µ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ
    else
        copy_backward(arr+first1,arr+last1,arr+first2+last1-first1);// –∫–æ–ø–∏—Ä—É–µ—Ç —Å–ø—Ä–∞–≤–∞ –Ω–∞–ª–µ–≤–æ



    for (int i=0;i<12;i++)
        cout<<arr[i]<<endl;


    return 0;
}
/*–ò—Å—Ö–æ–¥–Ω—ã–π –≤–µ–∫—Ç–æ—Ä:

cpp
std::vector<int> data = {10, 20, 30, 40, 50};
–ó–∞–¥–∞—á–∞:
–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–¥–∏–∞–ø–∞–∑–æ–Ω [20, 30, 40] (–∏–Ω–¥–µ–∫—Å—ã 1, 2, 3) –≤–Ω—É—Ç—Ä–∏ —Ç–æ–≥–æ –∂–µ –≤–µ–∫—Ç–æ—Ä–∞, –Ω–∞—á–∏–Ω–∞—è —Å –ø–æ–∑–∏—Ü–∏–∏ 3 (–∏–Ω–¥–µ–∫—Å 3).

–í—ã–∑–æ–≤:

cpp
std::copy_backward(
    data.begin() + 1, // –ò—Å—Ö–æ–¥–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 20 (–∏–Ω–¥–µ–∫—Å 1)
    data.begin() + 4, // –ò—Å—Ö–æ–¥–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ 40 (–∏–Ω–¥–µ–∫—Å 3)
    data.begin() + 5  // –ö–æ–Ω–µ—Ü —Ü–µ–ª–µ–≤–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ (–∏–Ω–¥–µ–∫—Å 5, –Ω–µ–≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ)
);
üîπ –®–∞–≥–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
–®–∞–≥	–ë–µ—Ä—ë—Ç—Å—è —ç–ª–µ–º–µ–Ω—Ç (–∏—Å—Ö–æ–¥–Ω—ã–π)	–ö–æ–ø–∏—Ä—É–µ—Ç—Å—è –≤ (—Ü–µ–ª–µ–≤–æ–π)	–°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–µ–∫—Ç–æ—Ä–∞
1	data[3] (40)	data[4]	{10, 20, 30, 40, 40}
2	data[2] (30)	data[3]	{10, 20, 30, 30, 40}
3	data[1] (20)	data[2]	{10, 20, 20, 30, 40}
–ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:

cpp
data = {10, 20, 20, 30, 40};*/
